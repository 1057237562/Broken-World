plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven { url "https://api.modrinth.com/maven" }
    maven { url "https://maven.shedaniel.me/" }
    maven {
        url = "https://maven.kyrptonaught.dev"
    }
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }
    maven {
        name = "AlexIIL"
        url = "https://maven.alexiil.uk/"
    }
    maven {
        name = "Ladysnake Libs"
        url = "https://maven.ladysnake.org/releases"
    }
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "dev.emi:trinkets:3.7.2"
    modImplementation "alexiil.mc.lib:libnetworkstack-base:0.7.1"
    modImplementation "alexiil.mc.lib:libblockattributes-all:0.11.0"

//    modImplementation 'net.kyrptonaught:customportalapi:0.0.1-beta57-1.19'
//    include 'net.kyrptonaught:customportalapi:0.0.1-beta57-1.19'

    modCompileOnly('maven.modrinth:sodium:mc1.20.1-0.5.10') { exclude group: "net.fabricmc.fabric-api" }
    modImplementation include('net.kyrptonaught:customportalapi:0.0.1-beta63-1.20') {
        exclude group: "net.fabricmc.fabric-api"
        exclude module: "sodium"
    }
    modImplementation include("io.github.cottonmc:LibGui:8.1.1+1.20.1")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:9.1.632")
    // Uncomment the following line to enable the deprecated Fabric API modules.
    // These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

    // modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def dataOutput = 'src/main/generated'

loom {
    runs {
        datagenClient {
            inherit client
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file(dataOutput)}"

            runDir "build/datagen"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += dataOutput
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

sourcesJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
